// Shorthand mixins.
// --------------------------------------------------------------------------

/// Border radius for all four corners.
/// @group css3
/// @param {Length} $top-left - Top Left Corner
/// @param {Length} $top-right - Top Right Corner
/// @param {Length} $bottom-right - Bottom Right Corner
/// @param {Length} $bottom-left - Bottom Left Corner
/// @example scss - Add a different radius to each corner.
/// 	.crazy-button {
/// 		@include kp-border-radius(5px, 10px, 15px, 20px);
/// 	}
@mixin kp-border-radius($top-left, $top-right, $bottom-right, $bottom-left) {
	border-top-left-radius: $top-left;
	border-top-right-radius: $top-right;
	border-bottom-right-radius: $bottom-right;
	border-bottom-left-radius: $bottom-left;
}

/// Box Shadow that is IE friendly (depends on CSS PIE).
/// @group cross-browser
/// @param {String} $offsets - Offsets
/// @param {String} $colour ['#000'] - Hexadecimal Colour
/// @param {String} $opacity [0.6] - Opacity
/// @example scss - Set a 3px red box shadow with one quarter opacity
/// 	.has-shadow {
/// 		@include kp-box-shadow( '3px 3px 3px', '#ff0000', 0.25);
/// 	}
@mixin kp-box-shadow($offsets: '1px 1px 1px', $colour: '#000', $opacity: 0.6) {
	box-shadow: $offsets $colour;
	box-shadow: $offsets rgba($colour, $opacity);
}

/// CSS3 polyfill for legacy IE.
/// @group cross-browser
/// @example scss - Add polyfill to button which has CSS3 declarations.
/// 	.fancy-button {
/// 		@include kp-css3-poly();
/// 		border-radius: 5px;
/// 		box-shadow: 3px 3px 3px #111;
/// 	}
@mixin kp-css3-poly {
	behavior: url(/polyfills/pie.htc);
}

/// Opacity that is IE friendly.
/// @group cross-browser
/// @param {Number} $opacity [0.6] - Opacity
/// @example scss - Set the opacity value of an element.
/// 	.transparent-image {
/// 		@include kp-opacity(0.9);
/// 	}
@mixin kp-opacity($opacity: 0.6) {
	opacity: $opacity;
	$opacity-ie: $opacity * 100;
	filter: alpha(opacity = $opacity-ie);
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$opacity-ie})";
}

/// Flip
/// @group css3
/// @param {String} $axis - Axis (X or Y)
/// @example scss - Flip an element upside down.
/// 	.accordion-toggle-arrow {
/// 		@include kp-flip-axis('Y');
/// 	}
@mixin kp-flip-axis($axis) {
	filter: Flip#{$axis};
	-ms-filter: "Flip#{$axis}";
	transform: scale#{$axis}-1;
}
